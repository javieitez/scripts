########################################################################################################
#     Generate Inventory
#  author: JA Vieitez
#  status: production
#
#   Generate an HTML Human Readable inventory based on the data gathered on the facts 
#     
########################################################################################################---
- hosts: all
  become: False

  vars:
    local_inventory_file: "/inventory/inventory2.html"

  tasks:
    - name: remove local file
      file:
        path: "{{ my_filerepo_local }}{{local_inventory_file}}"
        state: absent
      delegate_to: localhost
      run_once: true

    - name: write facts to local file
      blockinfile:
        path: "{{ my_filerepo_local }}{{local_inventory_file}}"
        block: |
          <hr><div>
          <h3>{{ inventory_hostname }}</h3>
          <h4>{{ ansible_host }} </h4>
          <p>
          <ul>
          <li>Real Hostname: <b> {{ ansible_hostname }} </b>
          <li>Managed by: <b> {{ my_manager }} </b>
          <li>OS: <b>{{ ansible_distribution }} {{ ansible_distribution_version }} - {{ ansible_distribution_release }} </b></li>
          <li>OS Family: <b>{{  ansible_os_family }}</b></li>
          <li>arch: <b>{{ ansible_architecture }} </b></li>
          <li>vCPUs: <b>{{ ansible_processor_count }}</b></li>
          <li>part of: <b>{{ group_names|join(',') }}</b></li>
          <li>Domain: <b>{{ ansible_domain }}</b></li>
          <li>Memory: <b>{{ (ansible_memtotal_mb * 1000000) |filesizeformat }}</b></li>
          <li>Swap: <b>{{ (ansible_memory_mb.swap.total * 1000000) |filesizeformat }} </b></li>
          <li>Uptime: <b>{{ now().replace(microsecond=0) - now().fromtimestamp(now(fmt='%s') | int - ansible_uptime_seconds) }}</b></li>
          <li>SELinux: <b>{{ ansible_selinux.status }}</b></li>
          <li>Service Manager: <b>{{ ansible_service_mgr }}</b></li>
          <li>Cloud: <b>{{ my_cloud }}</b></li>
          </ul>
          </p></div>
        marker: "<!-- {mark} {{ inventory_hostname }} -->"
        create: true
      delegate_to: localhost

    - name: flush local cache
      shell: sync
      delegate_to: localhost
      run_once: true

    - name: Write disk size to local file
      lineinfile:
        path: "{{ my_filerepo_local }}{{local_inventory_file}}"
        line: "<!-- DEBUG {{ inventory_hostname }}--><b>{{ item }}</b> {{ ansible_devices[item].size }}<br>"
        #create: true
        insertafter: "<!-- END {{ inventory_hostname }} -->"
      loop: "{{ ansible_devices.keys()|list }}"
      when: item | regex_search("(sd[a-z]|nvme[0-99]n[0-99]|xvd[a-z])")
      changed_when: True #always write
      delegate_to: localhost

    - name: Init HTML
      blockinfile:
        path: "{{ my_filerepo_local }}{{local_inventory_file}}"
        block: |
          <!DOCTYPE html>
          <html>
          <head>
          <title>my Inventory</title>
          </head>
          <body>
        insertbefore: BOF
        marker: "<!-- {mark} Auto header -->"
      delegate_to: localhost
      run_once: true


    - name: Close HTML
      blockinfile:
        path: "{{ my_filerepo_local }}{{local_inventory_file}}"
        block: |
          <hr>
          <p><i>Report generated on {{ ansible_date_time.date }} {{ ansible_date_time.time }} {{ ansible_date_time.tz }}</p></i>
          <p><i>Inventory from {{ inventory_file }}. Ansible version {{ ansible_version.string }} </p></i>
          </body>
          </html>
        insertafter: EOF
        marker: "<!-- {mark} Auto Footer -->"
      delegate_to: localhost
      run_once: true

#    - name: Full output
#      debug:
#        msg: "{{ ansible_devices[item] }}"
#      loop: "{{ ansible_devices.keys()|list }}"
#      when: item | regex_search("sd[a-z]")
